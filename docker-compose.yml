version: "2.1"
volumes:
  speedtest-data:
  settings:
  dashboard-data:
  adguardhome_work:
  adguardhome_conf:
  originals:
  storage:
  database:
  duplicati:
services:
  speedtest:
    build: ./speedtest
    privileged: true
    restart: never
    volumes:
      - "speedtest-data:/data"
    network_mode: host
    labels:
      io.balena.features.supervisor-api: 1
  connector:
    image: balenablocks/connector
    restart: always
    labels:
      io.balena.features.balena-api: "1"
    privileged: true
  dashboard:
    restart: always
    build: ./dashboard
    ports:
      - "1928:80"
    volumes:
      - "dashboard-data:/data"
  influxdb:
    image: influxdb@sha256:73f876e0c3bd02900f829d4884f53fdfffd7098dd572406ba549eed955bf821f
    container_name: influxdb
    restart: always
    environment:
      - INFLUXDB_DB=balena
      - INFLUXDB_USER=balena
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
      - INFLUXDB_DATA_DIR=/data
    volumes:
      - "speedtest-data:/data"
  mqtt:
    image: arm32v6/eclipse-mosquitto@sha256:ec3e1dbb9e198ff04d62c2d0f6eff74cad7438c7d080b89a28428fb96c8479c4
    ports:
      - "1883:1883"
    restart: always

  adguard:
    image: adguard/adguardhome:latest
    network_mode: host
    privileged: true
    volumes:
      - "adguardhome_work:/opt/adguardhome/work:rw"
      - "adguardhome_conf:/opt/adguardhome/conf:rw"
    command: --host 0.0.0.0 --port 80 --no-check-update --config /opt/adguardhome/conf/AdGuardHome.yaml

  # https://github.com/balenablocks/hostname
  hostname:
    image: balenablocks/hostname:latest
    restart: no
    labels:
      io.balena.features.supervisor-api: 1
    environment:
      SET_HOSTNAME: HomePi

  photoprism:
    image: photoprism/photoprism:arm64
    ports:
      - 2342:2342
    environment:
      PHOTOPRISM_ADMIN_PASSWORD: "stoneham" # PLEASE CHANGE: Your initial admin password (min 4 characters)
      PHOTOPRISM_ORIGINALS_LIMIT: 1000 # File size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "none" # Improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_WORKERS: 2 # Limits the number of indexing workers to reduce system load
      PHOTOPRISM_DEBUG: "false" # Run in debug mode (shows additional log messages)
      PHOTOPRISM_PUBLIC: "false" # No authentication required (disables password protection)
      PHOTOPRISM_READONLY: "false" # Don't modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false" # Enables experimental features
      PHOTOPRISM_DISABLE_WEBDAV: "false" # Disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false" # Disables Settings in Web UI
      PHOTOPRISM_DISABLE_TENSORFLOW: "false" # Disables using TensorFlow for image classification
      PHOTOPRISM_DARKTABLE_PRESETS: "true" # Enables Darktable presets and disables concurrent RAW conversion
      # PHOTOPRISM_FFMPEG_ENCODER: "h264_v4l2m2m"    # FFmpeg AVC encoder for video transcoding (default: libx264)
      # PHOTOPRISM_FFMPEG_BUFFERS: "64"              # FFmpeg capture buffers (default: 32)
      PHOTOPRISM_DETECT_NSFW: "false" # Flag photos as private that MAY be offensive
      PHOTOPRISM_UPLOAD_NSFW: "true" # Allow uploads that MAY be offensive
      PHOTOPRISM_DATABASE_DRIVER: "mysql" # Use MariaDB (or MySQL) instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306" # MariaDB database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism" # MariaDB database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism" # MariaDB database user name
      PHOTOPRISM_DATABASE_PASSWORD: "photoprism" # MariaDB database user password
      PHOTOPRISM_SITE_URL: "http://localhost:80/" # Public PhotoPrism URL
      PHOTOPRISM_SITE_TITLE: "PhotoPrism"
      PHOTOPRISM_SITE_CAPTION: "Browse Your Life"
      PHOTOPRISM_SITE_DESCRIPTION: ""
      PHOTOPRISM_SITE_AUTHOR: ""
    # For hardware AVC transcoding using the h264_v4l2m2m encoder:
    # devices:
    #  - "/dev/video11:/dev/video11"
    volumes:
      - "originals:/photoprism/originals"
      - "storage:/photoprism/storage"
    tmpfs:
      - /tmp
    labels:
      io.balena.features.supervisor-api: 1
    depends_on:
      - mariadb

  mariadb:
    image: arm64v8/mariadb:10.5
    command:
      - mysqld
      - --transaction-isolation=READ-COMMITTED
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --max-connections=512
      - --innodb-rollback-on-timeout=OFF
      - --innodb-lock-wait-timeout=50
    volumes:
      - "database:/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: balena
      MYSQL_DATABASE: photoprism
      MYSQL_USER: photoprism
      MYSQL_PASSWORD: photoprism
    # Repurpose the healthcheck cmd by having it export our database on a schedule.
    # Run the backup every 1 hour to a file called hourly-backup.sql.
    # How to restore: <https://mariadb.com/kb/en/mysqldump/#restoring>
    healthcheck:
      test: mysqldump -uroot -p$MYSQL_ROOT_PASSWORD --all-databases --result-file=/var/lib/mysql/hourly-backup.sql || exit 0
      interval: 1h
      timeout: 30s
      retries: 3
  duplicati:
    image: linuxserver/duplicati:arm64v8-version-v2.0.6.1-2.0.6.1_beta_2021-05-03
    environment:
      PUID: "0"
      PGID: "0"
      CLI_ARGS: --webservice-interface=any
    ports:
      - 8200:8200/tcp
